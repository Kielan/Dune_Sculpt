#pragma once

struct MeshOp;
struct Mesh;

void mesh_average_vert_facedata_ex(Mesh *mesh, MeshOp *op);
void mesh_beautify_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_bevel_ex(Mesh *mesh, MeshOp *op);
void mesh_bisect_edges_ex(Mesh *mesh, MeshOp *op);
void mesh_bisect_plane_ex(Mesh *mesh, MeshOp *op);
void mesh_mesh_to_mesh_ex(Mesh *mesh, MeshOp *op);
void mesh_bridge_loops_ex(Mesh *mesh, MeshOp *op);
void mesh_collapse_ex(Mesh *mesh, MeshOp *op);
void mesh_collapse_uvs_ex(Mesh *mesh, MeshOp *op);
void mesh_connect_verts_ex(Mesh *mesh, MeshOp *op);
void mesh_connect_verts_concave_ex(Mesh *mesh, MeshOp *op);
void mesh_connect_verts_nonplanar_ex(Mesh *mesh, MeshOp *op);
void mesh_connect_vert_pair_ex(Mesh *mesh, MeshOp *op);
void mesh_contextual_create_ex(Mesh *mesh, MeshOp *op);
void mesh_convex_hull_ex(Mesh *mesh, MeshOp *op);
void mesh_create_circle_ex(Mesh *mesh, MeshOp *op);
void mesh_create_cone_ex(Mesh *mesh, MeshOp *op);
void mesh_create_cube_ex(Mesh *mesh, MeshOp *op);
void mesh_create_grid_ex(Mesh *mesh, MeshOp *op);
void mesh_create_icosphere_ex(Mesh *mesh, MeshOp *op);
void mesh_create_monkey_ex(Mesh *mesh, MeshOp *op);
void mesh_create_uvsphere_ex(Mesh *mesh, MeshOp *op);
void mesh_create_vert_ex(Mesh *mesh, MeshOp *op);
void mesh_delete_exec(Mesh *mesh, MeshOp *op);
void mesh_dissolve_edges_ex(Mesh *mesh, MeshOp *op);
void mesh_dissolve_faces_ex(Mesh *mesh, MeshOp *op);
void mesh_dissolve_verts_ex(Mesh *meeh, MeshOp *op);
void mesh_dissolve_limit_ex(Mesh *mesh, MeshOp *op);
void mesh_dissolve_degenerate_ex(Mesh *mesh, MeshOp *op);
void mesh_duplicate_exec(Mesh *mesh, MeshOp *op);
void mesh_edgeloop_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_face_attribute_fill_exec(Mesh *mesh, MeshOp *op);
void mesh_holes_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_edgenet_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_edgenet_prepare_ex(Mesh *mesh, MeshOp *op);
void mesh_extrude_discrete_faces_ex(Mesh *mesh, MeshOp *op);
void mesh_extrude_edge_only_ex(Mesh *mesh, MeshOp *op);
void mesh_extrude_face_region_ex(Mesh *mesh, MeshOp *op);
void mesh_extrude_vert_indiv_ex(Mesh *mesh, MeshOp *op);
void mesh_find_doubles_ex(Mesh *mesh, MeshOp *op);
void mesh_grid_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_inset_individual_ex(Mesh *mesh, MeshOp *op);
void mesh_inset_region_ex(Mesh *m, MeshOp *op);
void mesh_join_triangles_ex(Mesh *m, MeshOp *op);
void mesh_to_mesh_ex(Mesh *mesh, MeshOp *op);
void mesh_mirror_ex(Mesh *mesh, MeshOp *op);
void mesh_object_load_mesh_ex(Mesh *m, MeshOp *op);
void mesh_pointmerge_ex(Mesh *mesh, MeshOp *op);
void mesh_pointmerge_facedata_ex(Mesh *mesh, MeshOp *op);
void mesh_recalc_face_normals_ex(Mesh *mesh, MeshOp *op);
void mesh_poke_ex(Mesh *mesh, MeshOp *op);
void mesh_offset_edgeloops_ex(Mesh *mesh, MeshOp *op);
void mesh_planar_faces_ex(Mesh *mesh, MeshOp *op);
void mesh_region_extend_ex(Mesh *mesh, MeshOp *op);
void mesh_remove_doubles_ex(Mesh *mesh, MeshOp *op);
void mesh_reverse_colors_ex(Mesh *mesh, MeshOp *op);
void mesh_reverse_faces_ex(Mesh *mesh, MeshOp *op);
void mesh_reverse_uvs_ex(Mesh *mesh, MeshOp *op);
void mesh_rotate_colors_ex(Mesh *mesh, MeshOp *op);
void mesh_rotate_edges_ex(Mesh *mesh, MeshOp *op);
void mesh_rotate_exec(Mesh *mesh, MeshOp *op);
void mesh_rotate_uvs_ex(Mesh *mesh, MeshOp *op);
void mesh_scale_exec(Mesh *mesh, MeshOp *op);
void mesh_smooth_vert_ex(Mesh *mesh, MeshOp *op);
void mesh_smooth_laplacian_vert_ex(Mesh *mesh, MeshOp *op);
void mesh_solidify_face_region_ex(Mesh *mesh, MeshOp *op);
void mesh_spin_ex(Mesh *mesh, MeshOp *op);
void mesh_split_edges_ex(Mesh *mesh, MeshOp *op);
void mesh_split_ex(Mesh *mesh, MeshOp *op);
void mesh_subdivide_edges_ex(Mesh *mesh, MeshOp *op);
void mesh_subdivide_edgering_ex(Mesh *mesh, MeshOp *op);
void mesh_symmetrize_ex(Mesh *mesh, MeshOp *op);
void mesh_transform_ex(Mesh *mesh, MeshOp *op);
void mesh_translate_ex(Mesh *meeh, MeshOp *op);
void mesh_triangle_fill_ex(Mesh *mesh, MeshOp *op);
void mesh_triangulate_ex(Mesh *mesh, MeshOp *op);
void mesh_unsubdivide_ex(Mesh *mesh, MeshOp *op);
void mesh_weld_verts_ex(Mesh *mesh, MeshOp *op);
void mesh_wireframe_ex(Mesh *mesh, MeshOp *op);
